# Generated by Django 5.1.2 on 2024-12-13 21:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'blank': 'Email address cannot be blank.', 'invalid': 'Please provide a valid email address.', 'unique': 'This email address is already in use. Please provide a different email.'}, max_length=254, unique=True)),
                ('username', models.CharField(error_messages={'blank': 'Username cannot be blank.', 'max_length': 'Username cannot exceed 100 characters.', 'unique': 'This username is already taken. Please choose another one.'}, max_length=100, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(error_messages={'blank': 'Age cannot be blank.', 'invalid': 'Age must be a valid integer.'})),
                ('first_name', models.CharField(error_messages={'blank': 'First name cannot be blank.', 'max_length': 'First name cannot exceed 30 characters.'}, max_length=30)),
                ('last_name', models.CharField(error_messages={'blank': 'Last name cannot be blank.', 'max_length': 'Last name cannot exceed 30 characters.'}, max_length=30)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
